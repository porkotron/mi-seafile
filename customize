#!/usr/bin/bash

PATH=/opt/local/gnu/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

# Exit if any commands fail
set -o errexit

# Ensure we have updated standard packages
echo "* Updating standard packages.";
pkgin -y up
pkgin -y upgrade

# Configuring image specific packages
echo "* Configuring image specific packages.";

useradd -m -d /home/haiwen -c Haiwen haiwen
passwd -u haiwen

sudo -u haiwen -H mkdir -p /home/haiwen/seafile/seafile-server
# TODO send pull request to pkgsrc upstream
echo "* Building libevhtp.";
git clone https://github.com/ellzey/libevhtp.git
cd libevhtp
git checkout tags/1.2.6
cmake -DEVHTP_DISABLE_SSL=ON -DEVHTP_BUILD_SHARED=ON -DCMAKE_INSTALL_PREFIX:PATH=/opt/local -DCMAKE_C_FLAGS="--std=gnu99 -D__EXTENSIONS__ -DNO_SYS_UN" .
make install
cd ..

echo "* Building seafile.";
curl -Lo libsearpc-v3.0.7.tar.gz https://github.com/haiwen/libsearpc/archive/v3.0.7.tar.gz 
curl -Lo ccnet-v5.0.6.tar.gz https://github.com/haiwen/ccnet/archive/v5.0.6.tar.gz
curl -Lo seafile-v5.1.0-server.tar.gz https://github.com/haiwen/seafile/archive/v5.1.0-server.tar.gz 
curl -Lo seahub-v5.1.0-server.tar.gz https://github.com/haiwen/seahub/archive/v5.1.0-server.tar.gz

tar xf libsearpc-v3.0.7.tar.gz
tar xf ccnet-v5.0.6.tar.gz 
tar xf seafile-v5.1.0-server.tar.gz

cd libsearpc-3.0.7
./autogen.sh
./configure --prefix=/opt/local
make install
cd ..
cd ccnet-5.0.6
./autogen.sh
./configure --prefix=/opt/local --disable-client --enable-server
make install
cd ..
cd seafile-5.1.0-server
# TODO send pull requests to haiwen upstream
for i in /root/patches/*.patch; do patch -p1 < $i; done
./autogen.sh
./configure --prefix=/opt/local --disable-fuse --disable-client --enable-server
make install
cd ..
sudo -u haiwen -H mkdir /home/haiwen/seafile/seafile-server/seahub
sudo -u haiwen -H tar xf seahub-v5.1.0-server.tar.gz -C /home/haiwen/seafile/seafile-server/seahub --strip-components 1
pip install -r /home/haiwen/seafile/seafile-server/seahub/requirements.txt
pip install djblets

echo "* Importing services.";
svccfg import /root/seafile.xml

echo "* Configuring nginx.";
cp /root/nginx.conf /opt/local/etc/nginx/nginx.conf

# Clean up
echo "* Cleaning up."
/opt/local/sbin/pkg_delete cmake gmake gcc49 pkg-config automake autoconf
rm -rf /root/*
rm -rf /tmp/*

# Prepare image for provisioning
sm-prepare-image -y