<?xml version='1.0'?>
<!DOCTYPE service_bundle SYSTEM '/usr/share/lib/xml/dtd/service_bundle.dtd.1'>
<service_bundle type='manifest' name='export'>
  <service name='application/seafile' type='service' version='1'>
	<create_default_instance enabled='false'/>
	<single_instance/>
	<dependency name='network' grouping='require_all' restart_on='error' type='service'>
	  <service_fmri value='svc:/milestone/network:default'/>
	</dependency>
	<dependency name='filesystem' grouping='require_all' restart_on='error' type='service'>
	  <service_fmri value='svc:/system/filesystem/local'/>
	</dependency>
	<dependency name='nginx' grouping='require_all' restart_on='error' type='service'>
	  <service_fmri value='svc:/pkgsrc/nginx'/>
	</dependency>
	<exec_method name='start' type='method' exec='seafile-admin start --fastcgi' timeout_seconds='300'>
		<method_context working_directory='/home/haiwen/seafile'>
		  <method_credential group='other' user='haiwen'/>
		  <method_environment>
			<envvar name='PATH' value='/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin:/bin'/>
		  </method_environment>
		</method_context>
	</exec_method>
	<exec_method name='stop' type='method' exec='seafile-admin stop' timeout_seconds='300'>
		<method_context working_directory='/home/haiwen/seafile'>
		  <method_credential group='other' user='haiwen'/>
		  <method_environment>
			<envvar name='PATH' value='/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin:/bin'/>
		  </method_environment>
		</method_context>
	</exec_method>
	<property_group name='startd' type='framework'>
	  <propval name='duration' type='astring' value='child'/>
	  <propval name='ignore_error' type='astring' value='core,signal'/>
	</property_group>
	<stability value='Evolving'/>
	<template>
	  <common_name>
		<loctext xml:lang='C'>Seafile</loctext>
	  </common_name>
	</template>
  </service>
</service_bundle>
